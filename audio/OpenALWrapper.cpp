#include "OpenALWrapper.hpp"
#include <dlfcn.h>

LPALCCREATECONTEXT alcCreateContext;
LPALCMAKECONTEXTCURRENT alcMakeContextCurrent;
LPALCPROCESSCONTEXT alcProcessContext;
LPALCSUSPENDCONTEXT alcSuspendContext;
LPALCDESTROYCONTEXT alcDestroyContext;
LPALCGETCURRENTCONTEXT alcGetCurrentContext;
LPALCGETCONTEXTSDEVICE alcGetContextsDevice;
LPALCGETERROR alcGetError;
LPALCOPENDEVICE alcOpenDevice;
LPALCCLOSEDEVICE alcCloseDevice;
LPALCISEXTENSIONPRESENT alcIsExtensionPresent;
LPALCGETPROCADDRESS alcGetProcAddress;
LPALCGETENUMVALUE alcGetEnumValue;
LPALCGETSTRING alcGetString;
LPALCGETINTEGERV alcGetIntegerv;
LPALCCAPTUREOPENDEVICE alcCaptureOpenDevice;
LPALCCAPTURECLOSEDEVICE alcCaptureCloseDevice;
LPALCCAPTURESTART alcCaptureStart;
LPALCCAPTURESTOP alcCaptureStop;
LPALCCAPTURESAMPLES alcCaptureSamples;
LPALDOPPLERFACTOR alDopplerFactor;
LPALDOPPLERVELOCITY alDopplerVelocity;
LPALSPEEDOFSOUND alSpeedOfSound;
LPALDISTANCEMODEL alDistanceModel;
LPALENABLE alEnable;
LPALDISABLE alDisable;
LPALISENABLED alIsEnabled;
LPALGETSTRING alGetString;
LPALGETBOOLEAN alGetBooleanv;
LPALGETINTEGERV alGetIntegerv;
LPALGETFLOATV alGetFloatv;
LPALGETDOUBLEV alGetDoublev;
LPALGETBOOLEAN alGetBoolean;
LPALGETINTEGER alGetInteger;
LPALGETFLOAT alGetFloat;
LPALGETDOUBLE alGetDouble;
LPALGETERROR alGetError;
LPALISEXTENSIONPRESENT alIsExtensionPresent;
LPALGETPROCADDRESS alGetProcAddress;
LPALGETENUMVALUE alGetEnumValue;
LPALGETLISTENERF alListenerf;
LPALGETLISTENER3F alListener3f;
LPALGETLISTENERFV alListenerfv;
LPALGETLISTENERI alListeneri;
LPALGETLISTENER3I alListener3i;
LPALGETLISTENERIV alListeneriv;
LPALGETLISTENERF alGetListenerf;
LPALGETLISTENER3F alGetListener3f;
LPALGETLISTENERFV alGetListenerfv;
LPALGETLISTENERI alGetListeneri;
LPALGETLISTENER3I alGetListener3i;
LPALGETLISTENERIV alGetListeneriv;
LPALGENSOURCES alGenSources;
LPALDELETESOURCES alDeleteSources;
LPALISSOURCE alIsSource;
LPALSOURCEF alSourcef;
LPALSOURCE3F alSource3f;
LPALSOURCEFV alSourcefv;
LPALSOURCEI alSourcei;
LPALSOURCE3I alSource3i;
LPALSOURCEIV alSourceiv;
LPALGETSOURCEF alGetSourcef;
LPALGETSOURCE3F alGetSource3f;
LPALGETSOURCEFV alGetSourcefv;
LPALGETSOURCEI alGetSourcei;
LPALGETSOURCE3I alGetSource3i;
LPALGETSOURCEIV alGetSourceiv;
LPALSOURCEPLAYV alSourcePlayv;
LPALSOURCESTOPV alSourceStopv;
LPALSOURCEREWINDV alSourceRewindv;
LPALSOURCEPAUSEV alSourcePausev;
LPALSOURCEPLAY alSourcePlay;
LPALSOURCESTOP alSourceStop;
LPALSOURCEREWIND alSourceRewind;
LPALSOURCEPAUSE alSourcePause;
LPALSOURCEQUEUEBUFFERS alSourceQueueBuffers;
LPALSOURCEUNQUEUEBUFFERS alSourceUnqueueBuffers;
LPALGENBUFFERS alGenBuffers;
LPALDELETEBUFFERS alDeleteBuffers;
LPALISBUFFER alIsBuffer;
LPALBUFFERDATA alBufferData;
LPALBUFFERF alBufferf;
LPALBUFFER3F alBuffer3f;
LPALBUFFERFV alBufferfv;
LPALBUFFERI alBufferi;
LPALBUFFER3I alBuffer3i;
LPALBUFFERIV alBufferiv;
LPALGETBUFFERF alGetBufferf;
LPALGETBUFFER3F alGetBuffer3f;
LPALGETBUFFERFV alGetBufferfv;
LPALGETBUFFERI alGetBufferi;
LPALGETBUFFER3I alGetBuffer3i;
LPALGETBUFFERIV alGetBufferiv;
LPALGENEFFECTS alGenEffects;
LPALDELETEEFFECTS alDeleteEffects;
LPALISEFFECT alIsEffect;
LPALEFFECTI alEffecti;
LPALEFFECTIV alEffectiv;
LPALEFFECTF alEffectf;
LPALEFFECTI alEffectfv;
LPALGETEFFECTI alGetEffecti;
LPALGETEFFECTIV alGetEffectiv;
LPALGETEFFECTF alGetEffectf;
LPALGETEFFECTFV alGetEffectfv;
LPALGENFILTERS alGenFilters;
LPALDELETEFILTERS alDeleteFilters;
LPALISFILTER alIsFilter;
LPALFILTERI alFilteri;
LPALFILTERIV alFilteriv;
LPALFILTERF alFilterf;
LPALFILTERFV alFilterfv;
LPALGETFILTERI alGetFilteri;
LPALGETFILTERIV alGetFilteriv;
LPALGETFILTERF alGetFilterf;
LPALGETFILTERFV alGetFilterfv;
LPALGENAUXILIARYEFFECTSLOTS alGenAuxiliaryEffectSlots;
LPALDELETEAUXILIARYEFFECTSLOTS alDeleteAuxiliaryEffectSlots;
LPALISAUXILIARYEFFECTSLOT alIsAuxiliaryEffectSlot;
LPALAUXILIARYEFFECTSLOTI alAuxiliaryEffectSloti;
LPALAUXILIARYEFFECTSLOTIV alAuxiliaryEffectSlotiv;
LPALAUXILIARYEFFECTSLOTF alAuxiliaryEffectSlotf;
LPALAUXILIARYEFFECTSLOTFV alAuxiliaryEffectSlotfv;
LPALGETAUXILIARYEFFECTSLOTI alGetAuxiliaryEffectSloti;
LPALGETAUXILIARYEFFECTSLOTIV alGetAuxiliaryEffectSlotiv;
LPALGETAUXILIARYEFFECTSLOTF alGetAuxiliaryEffectSlotf;
LPALGETAUXILIARYEFFECTSLOTFV alGetAuxiliaryEffectSlotfv;
PFNALBUFFERDATASTATICPROC alBufferDataStatic;
PFNALCSETTHREADCONTEXTPROC alcSetThreadContext;
PFNALCGETTHREADCONTEXTPROC alcGetThreadContext;
LPALREQUESTFOLDBACKSTART alRequestFoldbackStart;
LPALREQUESTFOLDBACKSTOP alRequestFoldbackStop;


bool loadAL()
{
	void* libopenal = dlopen("libopenal.so", RTLD_NOW | RTLD_LOCAL);
	if (!libopenal)
		return false;
	alcCreateContext = reinterpret_cast<LPALCCREATECONTEXT>(dlsym(libopenal,"alcCreateContext"));
	alcMakeContextCurrent = reinterpret_cast<LPALCMAKECONTEXTCURRENT>(dlsym(libopenal,"alcMakeContextCurrent"));
	alcProcessContext = reinterpret_cast<LPALCPROCESSCONTEXT>(dlsym(libopenal,"alcProcessContext"));
	alcSuspendContext = reinterpret_cast<LPALCSUSPENDCONTEXT>(dlsym(libopenal,"alcSuspendContext"));
	alcDestroyContext = reinterpret_cast<LPALCDESTROYCONTEXT>(dlsym(libopenal,"alcDestroyContext"));
	alcGetCurrentContext = reinterpret_cast<LPALCGETCURRENTCONTEXT>(dlsym(libopenal,"alcGetCurrentContext"));
	alcGetContextsDevice = reinterpret_cast<LPALCGETCONTEXTSDEVICE>(dlsym(libopenal,"alcGetContextsDevice"));
	alcGetError = reinterpret_cast<LPALCGETERROR>(dlsym(libopenal,"alcGetError"));
	alcOpenDevice = reinterpret_cast<LPALCOPENDEVICE>(dlsym(libopenal,"alcOpenDevice"));
	alcCloseDevice = reinterpret_cast<LPALCCLOSEDEVICE>(dlsym(libopenal,"alcCloseDevice"));
	alcIsExtensionPresent = reinterpret_cast<LPALCISEXTENSIONPRESENT>(dlsym(libopenal,"alcIsExtensionPresent"));
	alcGetProcAddress = reinterpret_cast<LPALCGETPROCADDRESS>(dlsym(libopenal,"alcGetProcAddress"));
	alcGetEnumValue = reinterpret_cast<LPALCGETENUMVALUE>(dlsym(libopenal,"alcGetEnumValue"));
	alcGetString = reinterpret_cast<LPALCGETSTRING>(dlsym(libopenal,"alcGetString"));
	alcGetIntegerv = reinterpret_cast<LPALCGETINTEGERV>(dlsym(libopenal,"alcGetIntegerv"));
	alcCaptureOpenDevice = reinterpret_cast<LPALCCAPTUREOPENDEVICE>(dlsym(libopenal,"alcCaptureOpenDevice"));
	alcCaptureCloseDevice = reinterpret_cast<LPALCCAPTURECLOSEDEVICE>(dlsym(libopenal,"alcCaptureCloseDevice"));
	alcCaptureStart = reinterpret_cast<LPALCCAPTURESTART>(dlsym(libopenal,"alcCaptureStart"));
	alcCaptureStop = reinterpret_cast<LPALCCAPTURESTOP>(dlsym(libopenal,"alcCaptureStop"));
	alcCaptureSamples = reinterpret_cast<LPALCCAPTURESAMPLES>(dlsym(libopenal,"alcCaptureSamples"));
	alDopplerFactor = reinterpret_cast<LPALDOPPLERFACTOR>(dlsym(libopenal,"alDopplerFactor"));
	alDopplerVelocity = reinterpret_cast<LPALDOPPLERVELOCITY>(dlsym(libopenal,"alDopplerVelocity"));
	alSpeedOfSound = reinterpret_cast<LPALSPEEDOFSOUND>(dlsym(libopenal,"alSpeedOfSound"));
	alDistanceModel = reinterpret_cast<LPALDISTANCEMODEL>(dlsym(libopenal,"alDistanceModel"));
	alEnable = reinterpret_cast<LPALENABLE>(dlsym(libopenal,"alEnable"));
	alDisable = reinterpret_cast<LPALDISABLE>(dlsym(libopenal,"alDisable"));
	alIsEnabled = reinterpret_cast<LPALISENABLED>(dlsym(libopenal,"alIsEnabled"));
	alGetString = reinterpret_cast<LPALGETSTRING>(dlsym(libopenal,"alGetString"));
	alGetBooleanv = reinterpret_cast<LPALGETBOOLEAN>(dlsym(libopenal,"alGetBooleanv"));
	alGetIntegerv = reinterpret_cast<LPALGETINTEGERV>(dlsym(libopenal,"alGetIntegerv"));
	alGetFloatv = reinterpret_cast<LPALGETFLOATV>(dlsym(libopenal,"alGetFloatv"));
	alGetDoublev = reinterpret_cast<LPALGETDOUBLEV>(dlsym(libopenal,"alGetDoublev"));
	alGetBoolean = reinterpret_cast<LPALGETBOOLEAN>(dlsym(libopenal,"alGetBoolean"));
	alGetInteger = reinterpret_cast<LPALGETINTEGER>(dlsym(libopenal,"alGetInteger"));
	alGetFloat = reinterpret_cast<LPALGETFLOAT>(dlsym(libopenal,"alGetFloat"));
	alGetDouble = reinterpret_cast<LPALGETDOUBLE>(dlsym(libopenal,"alGetDouble"));
	alGetError = reinterpret_cast<LPALGETERROR>(dlsym(libopenal,"alGetError"));
	alIsExtensionPresent = reinterpret_cast<LPALISEXTENSIONPRESENT>(dlsym(libopenal,"alIsExtensionPresent"));
	alGetProcAddress = reinterpret_cast<LPALGETPROCADDRESS>(dlsym(libopenal,"alGetProcAddress"));
	alGetEnumValue = reinterpret_cast<LPALGETENUMVALUE>(dlsym(libopenal,"alGetEnumValue"));
	alListenerf = reinterpret_cast<LPALGETLISTENERF>(dlsym(libopenal,"alListenerf"));
	alListener3f = reinterpret_cast<LPALGETLISTENER3F>(dlsym(libopenal,"alListener3f"));
	alListenerfv = reinterpret_cast<LPALGETLISTENERFV>(dlsym(libopenal,"alListenerfv"));
	alListeneri = reinterpret_cast<LPALGETLISTENERI>(dlsym(libopenal,"alListeneri"));
	alListener3i = reinterpret_cast<LPALGETLISTENER3I>(dlsym(libopenal,"alListener3i"));
	alListeneriv = reinterpret_cast<LPALGETLISTENERIV>(dlsym(libopenal,"alListeneriv"));
	alGetListenerf = reinterpret_cast<LPALGETLISTENERF>(dlsym(libopenal,"alGetListenerf"));
	alGetListener3f = reinterpret_cast<LPALGETLISTENER3F>(dlsym(libopenal,"alGetListener3f"));
	alGetListenerfv = reinterpret_cast<LPALGETLISTENERFV>(dlsym(libopenal,"alGetListenerfv"));
	alGetListeneri = reinterpret_cast<LPALGETLISTENERI>(dlsym(libopenal,"alGetListeneri"));
	alGetListener3i = reinterpret_cast<LPALGETLISTENER3I>(dlsym(libopenal,"alGetListener3i"));
	alGetListeneriv = reinterpret_cast<LPALGETLISTENERIV>(dlsym(libopenal,"alGetListeneriv"));
	alGenSources = reinterpret_cast<LPALGENSOURCES>(dlsym(libopenal,"alGenSources"));
	alDeleteSources = reinterpret_cast<LPALDELETESOURCES>(dlsym(libopenal,"alDeleteSources"));
	alIsSource = reinterpret_cast<LPALISSOURCE>(dlsym(libopenal,"alIsSource"));
	alSourcef = reinterpret_cast<LPALSOURCEF>(dlsym(libopenal,"alSourcef"));
	alSource3f = reinterpret_cast<LPALSOURCE3F>(dlsym(libopenal,"alSource3f"));
	alSourcefv = reinterpret_cast<LPALSOURCEFV>(dlsym(libopenal,"alSourcefv"));
	alSourcei = reinterpret_cast<LPALSOURCEI>(dlsym(libopenal,"alSourcei"));
	alSource3i = reinterpret_cast<LPALSOURCE3I>(dlsym(libopenal,"alSource3i"));
	alSourceiv = reinterpret_cast<LPALSOURCEIV>(dlsym(libopenal,"alSourceiv"));
	alGetSourcef = reinterpret_cast<LPALGETSOURCEF>(dlsym(libopenal,"alGetSourcef"));
	alGetSource3f = reinterpret_cast<LPALGETSOURCE3F>(dlsym(libopenal,"alGetSource3f"));
	alGetSourcefv = reinterpret_cast<LPALGETSOURCEFV>(dlsym(libopenal,"alGetSourcefv"));
	alGetSourcei = reinterpret_cast<LPALGETSOURCEI>(dlsym(libopenal,"alGetSourcei"));
	alGetSource3i = reinterpret_cast<LPALGETSOURCE3I>(dlsym(libopenal,"alGetSource3i"));
	alGetSourceiv = reinterpret_cast<LPALGETSOURCEIV>(dlsym(libopenal,"alGetSourceiv"));
	alSourcePlayv = reinterpret_cast<LPALSOURCEPLAYV>(dlsym(libopenal,"alSourcePlayv"));
	alSourceStopv = reinterpret_cast<LPALSOURCESTOPV>(dlsym(libopenal,"alSourceStopv"));
	alSourceRewindv = reinterpret_cast<LPALSOURCEREWINDV>(dlsym(libopenal,"alSourceRewindv"));
	alSourcePausev = reinterpret_cast<LPALSOURCEPAUSEV>(dlsym(libopenal,"alSourcePausev"));
	alSourcePlay = reinterpret_cast<LPALSOURCEPLAY>(dlsym(libopenal,"alSourcePlay"));
	alSourceStop = reinterpret_cast<LPALSOURCESTOP>(dlsym(libopenal,"alSourceStop"));
	alSourceRewind = reinterpret_cast<LPALSOURCEREWIND>(dlsym(libopenal,"alSourceRewind"));
	alSourcePause = reinterpret_cast<LPALSOURCEPAUSE>(dlsym(libopenal,"alSourcePause"));
	alSourceQueueBuffers = reinterpret_cast<LPALSOURCEQUEUEBUFFERS>(dlsym(libopenal,"alSourceQueueBuffers"));
	alSourceUnqueueBuffers = reinterpret_cast<LPALSOURCEUNQUEUEBUFFERS>(dlsym(libopenal,"alSourceUnqueueBuffers"));
	alGenBuffers = reinterpret_cast<LPALGENBUFFERS>(dlsym(libopenal,"alGenBuffers"));
	alDeleteBuffers = reinterpret_cast<LPALDELETEBUFFERS>(dlsym(libopenal,"alDeleteBuffers"));
	alIsBuffer = reinterpret_cast<LPALISBUFFER>(dlsym(libopenal,"alIsBuffer"));
	alBufferData = reinterpret_cast<LPALBUFFERDATA>(dlsym(libopenal,"alBufferData"));
	alBufferf = reinterpret_cast<LPALBUFFERF>(dlsym(libopenal,"alBufferf"));
	alBuffer3f = reinterpret_cast<LPALBUFFER3F>(dlsym(libopenal,"alBuffer3f"));
	alBufferfv = reinterpret_cast<LPALBUFFERFV>(dlsym(libopenal,"alBufferfv"));
	alBufferi = reinterpret_cast<LPALBUFFERI>(dlsym(libopenal,"alBufferi"));
	alBuffer3i = reinterpret_cast<LPALBUFFER3I>(dlsym(libopenal,"alBuffer3i"));
	alBufferiv = reinterpret_cast<LPALBUFFERIV>(dlsym(libopenal,"alBufferiv"));
	alGetBufferf = reinterpret_cast<LPALGETBUFFERF>(dlsym(libopenal,"alGetBufferf"));
	alGetBuffer3f = reinterpret_cast<LPALGETBUFFER3F>(dlsym(libopenal,"alGetBuffer3f"));
	alGetBufferfv = reinterpret_cast<LPALGETBUFFERFV>(dlsym(libopenal,"alGetBufferfv"));
	alGetBufferi = reinterpret_cast<LPALGETBUFFERI>(dlsym(libopenal,"alGetBufferi"));
	alGetBuffer3i = reinterpret_cast<LPALGETBUFFER3I>(dlsym(libopenal,"alGetBuffer3i"));
	alGetBufferiv = reinterpret_cast<LPALGETBUFFERIV>(dlsym(libopenal,"alGetBufferiv"));
	alGenEffects  = reinterpret_cast<LPALGENEFFECTS>(dlsym(libopenal,"alGenEffects"));
	alDeleteEffects  = reinterpret_cast<LPALDELETEEFFECTS>(dlsym(libopenal,"alDeleteEffects"));
	alIsEffect  = reinterpret_cast<LPALISEFFECT>(dlsym(libopenal,"alIsEffect"));
	alEffecti  = reinterpret_cast<LPALEFFECTI>(dlsym(libopenal,"alEffecti"));
	alEffectiv  = reinterpret_cast<LPALEFFECTIV>(dlsym(libopenal,"alEffectiv"));
	alEffectf  = reinterpret_cast<LPALEFFECTF>(dlsym(libopenal,"alEffectf"));
	alEffectfv  = reinterpret_cast<LPALEFFECTI>(dlsym(libopenal,"alEffectfv"));
	alGetEffecti  = reinterpret_cast<LPALGETEFFECTI>(dlsym(libopenal,"alGetEffecti"));
	alGetEffectiv  = reinterpret_cast<LPALGETEFFECTIV>(dlsym(libopenal,"alGetEffectiv"));
	alGetEffectf  = reinterpret_cast<LPALGETEFFECTF>(dlsym(libopenal,"alGetEffectf"));
	alGetEffectfv  = reinterpret_cast<LPALGETEFFECTFV>(dlsym(libopenal,"alGetEffectfv"));
	alGenFilters  = reinterpret_cast<LPALGENFILTERS>(dlsym(libopenal,"alGenFilters"));
	alDeleteFilters  = reinterpret_cast<LPALDELETEFILTERS>(dlsym(libopenal,"alDeleteFilters"));
	alIsFilter  = reinterpret_cast<LPALISFILTER>(dlsym(libopenal,"alIsFilter"));
	alFilteri  = reinterpret_cast<LPALFILTERI>(dlsym(libopenal,"alFilteri"));
	alFilteriv  = reinterpret_cast<LPALFILTERIV>(dlsym(libopenal,"alFilteriv"));
	alFilterf  = reinterpret_cast<LPALFILTERF>(dlsym(libopenal,"alFilterf"));
	alFilterfv  = reinterpret_cast<LPALFILTERFV>(dlsym(libopenal,"alFilterfv"));
	alGetFilteri  = reinterpret_cast<LPALGETFILTERI>(dlsym(libopenal,"alGetFilteri"));
	alGetFilteriv  = reinterpret_cast<LPALGETFILTERIV>(dlsym(libopenal,"alGetFilteriv"));
	alGetFilterf  = reinterpret_cast<LPALGETFILTERF>(dlsym(libopenal,"alGetFilterf"));
	alGetFilterfv  = reinterpret_cast<LPALGETFILTERFV>(dlsym(libopenal,"alGetFilterfv"));
	alGenAuxiliaryEffectSlots  = reinterpret_cast<LPALGENAUXILIARYEFFECTSLOTS>(dlsym(libopenal,"alGenAuxiliaryEffectSlots"));
	alDeleteAuxiliaryEffectSlots  = reinterpret_cast<LPALDELETEAUXILIARYEFFECTSLOTS>(dlsym(libopenal,"alDeleteAuxiliaryEffectSlots"));
	alIsAuxiliaryEffectSlot  = reinterpret_cast<LPALISAUXILIARYEFFECTSLOT>(dlsym(libopenal,"alIsAuxiliaryEffectSlot"));
	alAuxiliaryEffectSloti  = reinterpret_cast<LPALAUXILIARYEFFECTSLOTI>(dlsym(libopenal,"alAuxiliaryEffectSloti"));
	alAuxiliaryEffectSlotiv  = reinterpret_cast<LPALAUXILIARYEFFECTSLOTIV>(dlsym(libopenal,"alAuxiliaryEffectSlotiv"));
	alAuxiliaryEffectSlotf  = reinterpret_cast<LPALAUXILIARYEFFECTSLOTF>(dlsym(libopenal,"alAuxiliaryEffectSlotf"));
	alAuxiliaryEffectSlotfv  = reinterpret_cast<LPALAUXILIARYEFFECTSLOTFV>(dlsym(libopenal,"alAuxiliaryEffectSlotfv"));
	alGetAuxiliaryEffectSloti  = reinterpret_cast<LPALGETAUXILIARYEFFECTSLOTI>(dlsym(libopenal,"alGetAuxiliaryEffectSloti"));
	alGetAuxiliaryEffectSlotiv  = reinterpret_cast<LPALGETAUXILIARYEFFECTSLOTIV>(dlsym(libopenal,"alGetAuxiliaryEffectSlotiv"));
	alGetAuxiliaryEffectSlotf  = reinterpret_cast<LPALGETAUXILIARYEFFECTSLOTF>(dlsym(libopenal,"alGetAuxiliaryEffectSlotf"));
	alGetAuxiliaryEffectSlotfv  = reinterpret_cast<LPALGETAUXILIARYEFFECTSLOTFV>(dlsym(libopenal,"alGetAuxiliaryEffectSlotfv"));
	alBufferDataStatic  = reinterpret_cast<PFNALBUFFERDATASTATICPROC>(dlsym(libopenal,"alBufferDataStatic"));
	alcSetThreadContext  = reinterpret_cast<PFNALCSETTHREADCONTEXTPROC>(dlsym(libopenal,"alcSetThreadContext"));
	alcGetThreadContext  = reinterpret_cast<PFNALCGETTHREADCONTEXTPROC>(dlsym(libopenal,"alcGetThreadContext"));
	alRequestFoldbackStart  = reinterpret_cast<LPALREQUESTFOLDBACKSTART>(dlsym(libopenal,"alRequestFoldbackStart"));
	alRequestFoldbackStop  = reinterpret_cast<LPALREQUESTFOLDBACKSTOP>(dlsym(libopenal,"alRequestFoldbackStop"));
	return true;
}
